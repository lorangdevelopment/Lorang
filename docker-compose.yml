services:
  #frontend:
    #image: sveltekit
    #build: 
      #context: ./frontend
    #ports:
      #- "${FRONTEND_PORT}:3000"
    #networks: 
      #- frontend
  
  backend:
    image: postgis/postgis:17-3.5-alpine
    volumes:
      - ./backend/data/database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "--host=localhost", "--username=${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    networks:
      - backend

  cache:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
    networks:
      - backend 

  directus:
    image: directus/directus:11.4.1
    ports:
      - "${DIRECTUS_PORT}:8055"
    volumes:
      - ./backend/uploads:/directus/uploads
      - ./backend/extensions:/directus/extensions
    depends_on:
      backend:
        condition: service_healthy
      cache:
        condition: service_healthy
    environment:
      SECRET: ${DIRECTUS_SECRET}
      DB_CLIENT: ${DIRECTUS_DB_CLIENT}
      DB_HOST: ${DIRECTUS_DB_HOST}
      DB_PORT: ${DIRECTUS_DB_PORT}
      DB_DATABASE: ${DIRECTUS_DB_DATABASE}
      DB_USER: ${DIRECTUS_DB_USER}
      DB_PASSWORD: ${DIRECTUS_DB_PASSWORD}
      CACHE_ENABLED: ${DIRECTUS_CACHE_ENABLED}
      CACHE_AUTO_PURGE: ${DIRECTUS_CACHE_AUTO_PURGE}
      CACHE_STORE: ${DIRECTUS_CACHE_STORE}
      REDIS: ${DIRECTUS_REDIS_URL}
      ADMIN_EMAIL: ${DIRECTUS_ADMIN_EMAIL}
      ADMIN_PASSWORD: ${DIRECTUS_ADMIN_PASSWORD}
    networks:
      - backend
    env_file:
      - .env

      # make sure to set this in production
      # (see https://docs.directus.io/self-hosted/config-options#general)
      # PUBLIC_URL: "https://directus.example.com"
      # latest image versions
      # https://github.com/docker-library/docs/tree/master/

networks: 
  frontend:
  backend: